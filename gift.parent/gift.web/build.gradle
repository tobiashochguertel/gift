plugins {
	id 'war'
}
dependencies {
	compile project(':gift')
	compile project(':gift.ide')
	compile "org.eclipse.xtext:org.eclipse.xtext.xbase.web:${xtextVersion}"
	compile "org.eclipse.xtext:org.eclipse.xtext.web.servlet:${xtextVersion}"
	compile "org.eclipse.xtend:org.eclipse.xtend.lib:${xtextVersion}"
	compile "org.webjars:requirejs:2.1.20"
	compile "org.webjars:jquery:2.1.4"
	compile "org.webjars:ace:1.2.0"
	compile "org.webjars:codemirror:5.24.2"
	providedCompile "org.eclipse.jetty:jetty-annotations:9.2.11.v20150529"
	providedCompile "org.slf4j:slf4j-simple:1.7.12"
}


def orionDir = file('src/main/webapp/orion')
def orionZip = file("$buildDir/orion/built-codeEdit.zip")
def orionUrl = 'http://download.eclipse.org/orion/drops/R-14.2-201703170901/built-codeEdit.zip'

task downloadOrion {
    onlyIf {!orionZip.exists()}
    doLast {
        orionZip.parentFile.mkdirs()
        println "Download $orionUrl"
        ant.get(src: orionUrl, dest: orionZip)
    }
}

task unpackOrion(type: Copy) {
    onlyIf {!orionDir.exists()}
    dependsOn(downloadOrion)
    from(zipTree(orionZip))
    into(orionDir)
}

task jettyRun(type:JavaExec) {
	dependsOn(sourceSets.main.runtimeClasspath)
	classpath = sourceSets.main.runtimeClasspath.filter{it.exists()}
	main = 'org.xtext.example.mydsl.web.ServerLauncher'
	standardInput = System.in
	group = 'run'
	description = 'Starts an example Jetty server with your language'
}

tasks.eclipse.dependsOn(unpackOrion)

uploadArchives.enabled = false